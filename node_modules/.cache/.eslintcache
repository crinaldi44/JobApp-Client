[{"/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/index.js":"1","/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/reportWebVitals.js":"2","/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/App.js":"3","/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/components/NavigationPanel.js":"4","/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/settings/Settings.js":"5","/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/jobapp/JobApplicationScreen.js":"6","/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/components/Header.js":"7","/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/ApplicationTable.js":"8","/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/ApplicationTableCell.js":"9","/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/options/AddApplicationModal.js":"10","/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/StatusMarker.js":"11","/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/options/OptionsGroup.js":"12","/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/options/AcceptRejectModal.js":"13","/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/options/ModifyModal.js":"14","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/index.js":"15","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/reportWebVitals.js":"16","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/App.js":"17","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/components/NavigationPanel.js":"18","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/jobapp/JobApplicationScreen.js":"19","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/settings/Settings.js":"20","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/home/Home.js":"21","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/components/Header.js":"22","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/jobapp/components/ApplicationTable.js":"23","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/jobapp/components/ApplicationTableCell.js":"24","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/jobapp/components/options/AddApplicationModal.js":"25","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/jobapp/components/StatusMarker.js":"26","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/jobapp/components/options/OptionsGroup.js":"27","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/jobapp/components/options/AcceptRejectModal.js":"28","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/jobapp/components/options/ModifyModal.js":"29"},{"size":500,"mtime":1640887858000,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":1640887858000,"results":"32","hashOfConfig":"31"},{"size":849,"mtime":1641016090000,"results":"33","hashOfConfig":"31"},{"size":1094,"mtime":1641329128000,"results":"34","hashOfConfig":"31"},{"size":335,"mtime":1641016654000,"results":"35","hashOfConfig":"31"},{"size":532,"mtime":1641232758000,"results":"36","hashOfConfig":"31"},{"size":1451,"mtime":1641253800000,"results":"37","hashOfConfig":"31"},{"size":3006,"mtime":1641272014000,"results":"38","hashOfConfig":"31"},{"size":745,"mtime":1641242896000,"results":"39","hashOfConfig":"31"},{"size":5807,"mtime":1641329700000,"results":"40","hashOfConfig":"31"},{"size":504,"mtime":1641236176000,"results":"41","hashOfConfig":"31"},{"size":2695,"mtime":1641262214000,"results":"42","hashOfConfig":"31"},{"size":2535,"mtime":1641253658000,"results":"43","hashOfConfig":"31"},{"size":6511,"mtime":1641262210000,"results":"44","hashOfConfig":"31"},{"size":500,"mtime":1640887858000,"results":"45","hashOfConfig":"46"},{"size":362,"mtime":1640887858000,"results":"47","hashOfConfig":"46"},{"size":849,"mtime":1641016090000,"results":"48","hashOfConfig":"46"},{"size":1094,"mtime":1641329128000,"results":"49","hashOfConfig":"46"},{"size":532,"mtime":1641232758000,"results":"50","hashOfConfig":"46"},{"size":335,"mtime":1641016654000,"results":"51","hashOfConfig":"46"},{"size":460,"mtime":1643061461175,"results":"52","hashOfConfig":"46"},{"size":1451,"mtime":1643057841089,"results":"53","hashOfConfig":"46"},{"size":3006,"mtime":1643061292565,"results":"54","hashOfConfig":"46"},{"size":740,"mtime":1643061371600,"results":"55","hashOfConfig":"46"},{"size":5870,"mtime":1643061603593,"results":"56","hashOfConfig":"46"},{"size":504,"mtime":1641236176000,"results":"57","hashOfConfig":"46"},{"size":2695,"mtime":1641262214000,"results":"58","hashOfConfig":"46"},{"size":2535,"mtime":1641253658000,"results":"59","hashOfConfig":"46"},{"size":6511,"mtime":1641262210000,"results":"60","hashOfConfig":"46"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"85fqzh",{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"yxs7eg",{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"91"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"91"},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"91"},{"filePath":"121","messages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"91"},"/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/index.js",[],"/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/reportWebVitals.js",[],"/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/App.js",["124"],"/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/components/NavigationPanel.js",[],"/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/settings/Settings.js",[],"/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/jobapp/JobApplicationScreen.js",[],"/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/components/Header.js",[],"/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/ApplicationTable.js",["125"],"/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/ApplicationTableCell.js",[],"/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/options/AddApplicationModal.js",["126","127","128","129","130"],"/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/StatusMarker.js",[],"/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/options/OptionsGroup.js",["131"],"/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/options/AcceptRejectModal.js",["132"],"/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/options/ModifyModal.js",["133"],"/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/index.js",[],["134","135"],"/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/reportWebVitals.js",[],"/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/App.js",["136"],"import logo from './logo.svg';\nimport './App.css';\nimport NavigationPanel from './components/NavigationPanel';\nimport {BrowserRouter as Router, Routes, Route} from 'react-router-dom'\nimport Home from './pages/home/Home';\nimport JobApp from './pages/jobapp/JobApplicationScreen'\nimport Settings from './pages/settings/Settings'\n\n\n/**\n * Represents the entry point for the application.\n * @return {JSX.element}  a JSX element\n */\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Router>\n        <NavigationPanel/>\n        <div className='content'>\n          <Routes>\n            <Route path='/' exact element={<Home/>}/>\n            <Route path='/applications' element={<JobApp/>}/>\n            <Route path='/settings' element={<Settings/>}/>\n          </Routes>\n          </div>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/components/NavigationPanel.js",[],"/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/jobapp/JobApplicationScreen.js",[],"/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/settings/Settings.js",[],"/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/home/Home.js",[],"/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/components/Header.js",[],"/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/jobapp/components/ApplicationTable.js",["137"],"/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/jobapp/components/ApplicationTableCell.js",[],"/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/jobapp/components/options/AddApplicationModal.js",["138","139","140","141","142"],"/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/jobapp/components/StatusMarker.js",[],"/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/jobapp/components/options/OptionsGroup.js",["143"],"import React from \"react\";\nimport './OptionsGroup.css'\nimport ReactToolTip from \"react-tooltip\";\nimport {AcceptRejectModal} from \"./AcceptRejectModal\";\nimport axios from \"axios\";\nimport {ModifyModal} from \"./ModifyModal\";\n\n/**\n * The OptionsGroup stateless functional component allows a user to modify a given component. For each table cell,\n * the object from the database entry is passed as a prop. Upon clicking an object, the ID is passed down further to a\n * confirmation modal, which will confirm that the user wishes to proceed with the operation OR it presents\n * with a popup to change the settings from the application.\n * @param props props.app stores the application as a prop, so as to prepare the options modal\n * @returns {JSX.Element}\n * @constructor\n */\nconst OptionsGroup = (props) => {\n\n    /**\n     * Handles action taken when the user marks an item as accepted.\n     */\n    const handleMarkAccepted = async () => {\n        await axios.patch(`http://localhost:3000/api/applications/${props.app.id}`, {\n            status: 'ACCEPTED'\n        }).then(props.rerender()).catch(error => console.error(error))\n    }\n\n    /**\n     * Handles action taken when the user marks an item as rejected.\n     */\n    const handleDeleteApp = async () => {\n        await axios.delete(`http://localhost:3000/api/applications/${props.app.id}`)\n            .then(props.rerender())\n            .catch(error => console.error(error))\n    }\n\n    return(\n        <div className='options__group__container'>\n            <ul className='options__group__list'>\n                <li>\n                    <ModifyModal\n                        handler={props.rerender}\n                        buttonColor={'#51629D'}\n                        buttonIcon={'fas fa-cogs'}\n                        buttonTooltip=\"Modify application\"\n                        application={props.app}\n                    />\n                </li>\n                <li>\n                    <AcceptRejectModal\n                        action={\"mark as accepted\"}\n                        handler={handleMarkAccepted}\n                        buttonColor={'#88E486'}\n                        buttonIcon={'fa fa-thumbs-up'}\n                        buttonTooltip=\"Mark as accepted\"/>\n                </li>\n                <li>\n                    <AcceptRejectModal\n                        action={\"delete this application\"}\n                        handler={handleDeleteApp}\n                        buttonColor={'#E48C86'}\n                        buttonIcon={'fas fa-trash'}\n                        buttonTooltip=\"Delete application\"\n                    />\n                </li>\n            </ul>\n        </div>\n    )\n}\n\nexport default OptionsGroup","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/jobapp/components/options/AcceptRejectModal.js",["144"],"import React, {useState} from \"react\";\nimport {\n    Dialog,\n    DialogContent,\n    DialogTitle,\n    DialogActions,\n    Button,\n    DialogContentText,\n    Snackbar,\n    Tooltip\n} from \"@mui/material\";\nimport \"./AcceptRejectModal.css\"\n\n/**\n * The AcceptRejectModal stateful component accepts the application prop and contains information regarding the dialog\n * presented by it. Stores a state variable - upon button clicked, state variable is toggled and the modal\n * is shown with a set of options allowing the user to confirm the action.\n * @constructor\n */\nexport const AcceptRejectModal = (props) => {\n\n    /**\n     * A state variable that represents the current \"show\" state of the modal by toggling\n     * display CSS value.\n     */\n    const [open, setOpen] = useState(false)\n\n    /**\n     * Handles action taken on button click. When clicked, toggles the\n     * state of the AcceptRejectModal from closed to open.\n     */\n    const handleOpen = () => {\n        setOpen(true)\n    }\n\n    /**\n     * Handles action taken when the user chooses to cancel the action taken.\n     */\n    const handleClose = () => {\n        setOpen(false)\n    }\n\n    /**\n     * Handles action taken on confirm\n     */\n    const handleConfirm = () => {\n        props.handler()\n        setOpen(false)\n    }\n\n    return (\n        <>\n            <Tooltip title={props.buttonTooltip}>\n            <i\n                style={{color: props.buttonColor, fontSize: '20px'}}\n                className={props.buttonIcon}\n                onClick={handleOpen}></i>\n            </Tooltip>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {`Are you sure you want to ${props.action}?`}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                       This action may be changed at any time by navigating to the application entry's\n                        options menu.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose}>Cancel</Button>\n                    <Button onClick={handleConfirm} autoFocus>\n                        Confirm\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n\n}","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/jobapp/components/options/ModifyModal.js",["145"],"import React, {useState} from \"react\";\nimport {\n    Dialog,\n    DialogContent,\n    DialogTitle,\n    DialogActions,\n    Button,\n    DialogContentText,\n    TextField,\n    Select,\n    MenuItem,\n    FormControl, InputLabel,\n    InputAdornment, Tooltip\n} from \"@mui/material\";\nimport \"./AcceptRejectModal.css\"\nimport ReactToolTip from \"react-tooltip\";\nimport axios from \"axios\";\n\n/**\n * The ModifyModal stateful component accepts the application prop and contains information regarding the dialog\n * presented by it. Stores a state variable - upon button clicked, state variable is toggled and the modal\n * is shown with a set of options allowing the user to confirm the action.\n * @constructor\n */\nexport const ModifyModal = (props) => {\n\n    /**\n     * A state variable that represents the current \"show\" state of the modal by toggling\n     * display CSS value.\n     */\n    const [open, setOpen] = useState(false)\n\n    /**\n     * State variable that represents the application with changes to commit.\n     */\n    const [application, setApplication] = useState(props.application)\n\n    /**\n     * Handles action taken on button click. When clicked, toggles the\n     * state of the AcceptRejectModal from closed to open.\n     */\n    const handleOpen = () => {\n        setOpen(true)\n    }\n\n    /**\n     * Handles action taken when the user chooses to cancel the action taken.\n     */\n    const handleClose = () => {\n        setOpen(false)\n    }\n\n    /**\n     * Handles action taken on confirm. Pushes a patch request to the server. If the application in the state\n     * of this component matches, simply closes the modal so as to avoid crowding with unnecessary requests.\n     */\n    const handleConfirm = async () => {\n        await axios.patch(`http://localhost:3000/api/applications/${application.id}`, application)\n            .then(setOpen(false)).then(props.handler())\n            .catch(error => { console.error(error) })\n    }\n\n    /**\n     * Handles a change when the textfield input changes.\n     * @type {(function(*): void)|*}\n     */\n    const handleFieldDidChange = (prop, event) => {\n        setApplication({\n            ...application, [prop]: event.target.value\n        })\n    };\n\n    return (\n        <>\n            <Tooltip title='Modify application'>\n                <i\n                    style={{color: props.buttonColor, fontSize: '20px'}}\n                    className={props.buttonIcon}\n                    onClick={handleOpen}></i>\n            </Tooltip>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {`Modifying application: ${application.business_name}`}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                       Note: This action may be changed at any time by navigating to the application entry's\n                        options menu.\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"business_name\"\n                        type=\"text\"\n                        fullWidth\n                        variant=\"standard\"\n                        value={application.business_name}\n                        onChange={event => {\n                            handleFieldDidChange('business_name', event)\n                            }\n                        }\n                        sx={{ m: 1, width: '25ch' }}\n                        InputProps={{\n                            startAdornment: <InputAdornment position=\"start\">Name</InputAdornment>,\n                        }}\n                    />\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"business_description\"\n                        type=\"text\"\n                        fullWidth\n                        variant=\"standard\"\n                        value={application.business_description}\n                        sx={{ m: 1, width: '25ch' }}\n                        InputProps={{\n                            startAdornment: <InputAdornment position=\"start\">Description</InputAdornment>,\n                        }}\n                        onChange={(event) => {\n                            handleFieldDidChange('business_description', event)\n                            }\n                        }\n                    />\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"role_type\"\n                        type=\"text\"\n                        fullWidth\n                        variant=\"standard\"\n                        value={application.role_type}\n                        onChange={(event) => {\n                            handleFieldDidChange('role_type', event)\n                        }}\n                        sx={{ m: 1, width: '25ch' }}\n                        InputProps={{\n                            startAdornment: <InputAdornment position=\"start\">Role</InputAdornment>,\n                        }}\n                    />\n                    <FormControl fullWidth>\n                        <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={application.status}\n                            label=\"Status\"\n                            onChange={(event) => {\n                                handleFieldDidChange('status', event)\n                            }}\n                        >\n                            <MenuItem value={'PENDING'}>PENDING</MenuItem>\n                            <MenuItem value={'ACCEPTED'}>ACCEPTED</MenuItem>\n                            <MenuItem value={'REJECTED'}>REJECTED</MenuItem>\n                        </Select>\n                    </FormControl>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose}>Cancel</Button>\n                    <Button onClick={handleConfirm} autoFocus>\n                        Confirm\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n\n}",{"ruleId":"146","severity":1,"message":"147","line":1,"column":8,"nodeType":"148","messageId":"149","endLine":1,"endColumn":12},{"ruleId":"146","severity":1,"message":"150","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":11},{"ruleId":"146","severity":1,"message":"151","line":10,"column":5,"nodeType":"148","messageId":"149","endLine":10,"endColumn":11},{"ruleId":"146","severity":1,"message":"152","line":11,"column":5,"nodeType":"148","messageId":"149","endLine":11,"endColumn":13},{"ruleId":"146","severity":1,"message":"153","line":12,"column":5,"nodeType":"148","messageId":"149","endLine":12,"endColumn":16},{"ruleId":"146","severity":1,"message":"154","line":12,"column":18,"nodeType":"148","messageId":"149","endLine":12,"endColumn":28},{"ruleId":"146","severity":1,"message":"155","line":16,"column":8,"nodeType":"148","messageId":"149","endLine":16,"endColumn":20},{"ruleId":"146","severity":1,"message":"155","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":20},{"ruleId":"146","severity":1,"message":"156","line":9,"column":5,"nodeType":"148","messageId":"149","endLine":9,"endColumn":13},{"ruleId":"146","severity":1,"message":"155","line":16,"column":8,"nodeType":"148","messageId":"149","endLine":16,"endColumn":20},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"146","severity":1,"message":"147","line":1,"column":8,"nodeType":"148","messageId":"149","endLine":1,"endColumn":12},{"ruleId":"146","severity":1,"message":"150","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":11},{"ruleId":"146","severity":1,"message":"151","line":10,"column":5,"nodeType":"148","messageId":"149","endLine":10,"endColumn":11},{"ruleId":"146","severity":1,"message":"152","line":11,"column":5,"nodeType":"148","messageId":"149","endLine":11,"endColumn":13},{"ruleId":"146","severity":1,"message":"153","line":12,"column":5,"nodeType":"148","messageId":"149","endLine":12,"endColumn":16},{"ruleId":"146","severity":1,"message":"154","line":12,"column":18,"nodeType":"148","messageId":"149","endLine":12,"endColumn":28},{"ruleId":"146","severity":1,"message":"155","line":16,"column":8,"nodeType":"148","messageId":"149","endLine":16,"endColumn":20},{"ruleId":"146","severity":1,"message":"155","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":20},{"ruleId":"146","severity":1,"message":"156","line":9,"column":5,"nodeType":"148","messageId":"149","endLine":9,"endColumn":13},{"ruleId":"146","severity":1,"message":"155","line":16,"column":8,"nodeType":"148","messageId":"149","endLine":16,"endColumn":20},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'App' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'ReactToolTip' is defined but never used.","'Snackbar' is defined but never used.","no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-global-assign","no-unsafe-negation"]