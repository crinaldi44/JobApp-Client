[{"/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/index.js":"1","/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/reportWebVitals.js":"2","/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/App.js":"3","/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/components/NavigationPanel.js":"4","/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/settings/Settings.js":"5","/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/jobapp/JobApplicationScreen.js":"6","/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/components/Header.js":"7","/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/ApplicationTable.js":"8","/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/ApplicationTableCell.js":"9","/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/options/AddApplicationModal.js":"10","/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/StatusMarker.js":"11","/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/options/OptionsGroup.js":"12","/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/options/AcceptRejectModal.js":"13","/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/options/ModifyModal.js":"14","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/index.js":"15","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/reportWebVitals.js":"16","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/App.js":"17","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/components/NavigationPanel.js":"18","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/jobapp/JobApplicationScreen.js":"19","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/settings/Settings.js":"20","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/home/Home.js":"21","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/components/Header.js":"22","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/jobapp/components/ApplicationTable.js":"23","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/jobapp/components/ApplicationTableCell.js":"24","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/jobapp/components/options/AddApplicationModal.js":"25","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/jobapp/components/StatusMarker.js":"26","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/jobapp/components/options/OptionsGroup.js":"27","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/jobapp/components/options/AcceptRejectModal.js":"28","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/jobapp/components/options/ModifyModal.js":"29"},{"size":500,"mtime":1640887858000,"results":"30","hashOfConfig":"31"},{"size":362,"mtime":1640887858000,"results":"32","hashOfConfig":"31"},{"size":849,"mtime":1641016090000,"results":"33","hashOfConfig":"31"},{"size":1094,"mtime":1641329128000,"results":"34","hashOfConfig":"31"},{"size":335,"mtime":1641016654000,"results":"35","hashOfConfig":"31"},{"size":532,"mtime":1641232758000,"results":"36","hashOfConfig":"31"},{"size":1451,"mtime":1641253800000,"results":"37","hashOfConfig":"31"},{"size":3006,"mtime":1641272014000,"results":"38","hashOfConfig":"31"},{"size":745,"mtime":1641242896000,"results":"39","hashOfConfig":"31"},{"size":5807,"mtime":1641329700000,"results":"40","hashOfConfig":"31"},{"size":504,"mtime":1641236176000,"results":"41","hashOfConfig":"31"},{"size":2695,"mtime":1641262214000,"results":"42","hashOfConfig":"31"},{"size":2535,"mtime":1641253658000,"results":"43","hashOfConfig":"31"},{"size":6511,"mtime":1641262210000,"results":"44","hashOfConfig":"31"},{"size":500,"mtime":1640887858000,"results":"45","hashOfConfig":"46"},{"size":362,"mtime":1640887858000,"results":"47","hashOfConfig":"46"},{"size":849,"mtime":1641016090000,"results":"48","hashOfConfig":"46"},{"size":1094,"mtime":1641329128000,"results":"49","hashOfConfig":"46"},{"size":532,"mtime":1641232758000,"results":"50","hashOfConfig":"46"},{"size":335,"mtime":1641016654000,"results":"51","hashOfConfig":"46"},{"size":460,"mtime":1643061461175,"results":"52","hashOfConfig":"46"},{"size":2455,"mtime":1643065145634,"results":"53","hashOfConfig":"46"},{"size":3006,"mtime":1643074785735,"results":"54","hashOfConfig":"46"},{"size":747,"mtime":1643076132537,"results":"55","hashOfConfig":"46"},{"size":5958,"mtime":1643074782719,"results":"56","hashOfConfig":"46"},{"size":513,"mtime":1643075914783,"results":"57","hashOfConfig":"46"},{"size":2705,"mtime":1643075453901,"results":"58","hashOfConfig":"46"},{"size":2535,"mtime":1641253658000,"results":"59","hashOfConfig":"46"},{"size":6516,"mtime":1643076085772,"results":"60","hashOfConfig":"46"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"85fqzh",{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},"yxs7eg",{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"91"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"91"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114"},{"filePath":"115","messages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"91"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/index.js",[],"/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/reportWebVitals.js",[],"/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/App.js",["124"],"/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/components/NavigationPanel.js",[],"/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/settings/Settings.js",[],"/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/jobapp/JobApplicationScreen.js",[],"/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/components/Header.js",[],"/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/ApplicationTable.js",["125"],"/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/ApplicationTableCell.js",[],"/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/options/AddApplicationModal.js",["126","127","128","129","130"],"/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/StatusMarker.js",[],"/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/options/OptionsGroup.js",["131"],"/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/options/AcceptRejectModal.js",["132"],"/Users/chrisrinaldi/Downloads/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/options/ModifyModal.js",["133"],"/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/index.js",[],["134","135"],"/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/reportWebVitals.js",[],"/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/App.js",["136"],"import logo from './logo.svg';\nimport './App.css';\nimport NavigationPanel from './components/NavigationPanel';\nimport {BrowserRouter as Router, Routes, Route} from 'react-router-dom'\nimport Home from './pages/home/Home';\nimport JobApp from './pages/jobapp/JobApplicationScreen'\nimport Settings from './pages/settings/Settings'\n\n\n/**\n * Represents the entry point for the application.\n * @return {JSX.element}  a JSX element\n */\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Router>\n        <NavigationPanel/>\n        <div className='content'>\n          <Routes>\n            <Route path='/' exact element={<Home/>}/>\n            <Route path='/applications' element={<JobApp/>}/>\n            <Route path='/settings' element={<Settings/>}/>\n          </Routes>\n          </div>\n        </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/components/NavigationPanel.js",[],"/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/jobapp/JobApplicationScreen.js",[],"/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/settings/Settings.js",[],"/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/home/Home.js",[],"/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/components/Header.js",[],"/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/jobapp/components/ApplicationTable.js",["137"],"import React, {useEffect, useState} from 'react'\nimport axios from \"axios\";\nimport App from \"../../../App\";\nimport ApplicationTableCell from \"./ApplicationTableCell\";\nimport './ApplicationTable.css'\nimport {AddApplicationModal} from \"./options/AddApplicationModal\";\n\n/**\n * The ApplicationTable is meant to retrieve and store data\n * @returns {JSX.Element}\n */\nconst ApplicationTable = () => {\n\n    /**\n     * Represents the applications as an array of JSON objects.\n     */\n    const [applications, setApplications] = useState([])\n\n    const [applicationsOrig, setApplicationsOrig] = useState([])\n\n    /**\n     * Forces the component to re-render and retrieve the data. Waits 300ms before executing request for data\n     * so as to allow for any latency between the server executing any patch requests.\n     */\n    const forceRerender = () => {\n        setTimeout(() => {\n            getData()\n        }, 300)\n    }\n\n    async function getData() {\n        const response = await axios.get(process.env.REACT_APP_PRODUCTION_ADDRESS)\n            .catch(error => {console.error(error)})\n        const data = await response.data\n        setApplications(data)\n        setApplicationsOrig(data)\n    }\n\n    /**\n     * Retrieve the data from the server.\n     */\n    useEffect(() => {\n        getData()\n    }, [])\n\n    /**\n     * Filters data using map.\n     * @param data\n     */\n    const filterData = data => {\n        setApplications(applicationsOrig.filter(s => s.business_name.toLowerCase().includes(data.toLowerCase())))\n    }\n\n    return (\n        <>\n            <div className='application__search__container'>\n                <h2>Search application</h2>\n                <div>\n                <input\n                    className='search__application__input'\n                    placeholder='Enter the name of the application'\n                    onChange={text => {filterData(text.target.value)}}/>\n                    <AddApplicationModal\n                        handler={forceRerender}\n                        buttonColor={'#51629D'}\n                        buttonIcon={'fas fa-plus'}\n                    />\n                </div>\n            </div>\n        <div className='app__table__container'>\n            <table>\n                <thead>\n                <tr>\n                    <th>Business name</th>\n                    <th>Description</th>\n                    <th>Role type</th>\n                    <th>Status</th>\n                    <th>Created date</th>\n                    <th>Options</th>\n                </tr>\n                </thead>\n                <tbody>\n                {applications.map(app => (\n                    <ApplicationTableCell\n                        application={app}\n                        rerender={forceRerender}\n                    />\n                ))}\n                </tbody>\n            </table>\n        </div>\n            </>\n    )\n}\n\n/**\n * The ApplicationTable is meant to retrieve and store data\n * @returns {JSX.Element}\n */\nexport default ApplicationTable\n","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/jobapp/components/ApplicationTableCell.js",[],"/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/jobapp/components/options/AddApplicationModal.js",["138","139","140","141","142"],"import React, {useState} from \"react\";\nimport {\n    Dialog,\n    DialogContent,\n    DialogTitle,\n    DialogActions,\n    Button,\n    DialogContentText,\n    TextField,\n    Select,\n    MenuItem,\n    FormControl, InputLabel,\n    InputAdornment, Tooltip\n} from \"@mui/material\";\nimport \"./AcceptRejectModal.css\"\nimport ReactToolTip from \"react-tooltip\";\nimport axios from \"axios\";\n\n/**\n * The ModifyModal stateful component accepts the application prop and contains information regarding the dialog\n * presented by it. Stores a state variable - upon button clicked, state variable is toggled and the modal\n * is shown with a set of options allowing the user to confirm the action.\n * @constructor\n */\nexport const AddApplicationModal = (props) => {\n\n    /**\n     * A state variable that represents the current \"show\" state of the modal by toggling\n     * display CSS value.\n     */\n    const [open, setOpen] = useState(false)\n\n    /**\n     * State variable that represents the application with changes to commit.\n     */\n    const [application, setApplication] = useState({\n        business_name: '',\n        business_description: '',\n        role_type: '',\n        status: 'PENDING'\n    })\n\n    /**\n     * Handles action taken on button click. When clicked, toggles the\n     * state of the AcceptRejectModal from closed to open.\n     */\n    const handleOpen = () => {\n        setOpen(true)\n    }\n\n    /**\n     * Handles action taken when the user chooses to cancel the action taken.\n     */\n    const handleClose = () => {\n        setOpen(false)\n    }\n\n    /**\n     * Handles action taken on confirm. Pushes a patch request to the server. If the application in the state\n     * of this component matches, simply closes the modal so as to avoid crowding with unnecessary requests.\n     */\n    const handleConfirm = async () => {\n        await axios.post(`${process.env.REACT_APP_PRODUCTION_ADDRESS}`, application)\n            .then(setOpen(false)).then(props.handler())\n            .catch(error => {\n                console.error(error)\n                console.log(`address: ${process.env.REACT_APP_PRODUCTION_ADDRESS}`)\n                setOpen(false)}).then(\n                    setApplication({})\n                )\n    }\n\n    /**\n     * Handles a change when the textfield input changes.\n     * @type {(function(*): void)|*}\n     */\n    const handleFieldDidChange = (prop, event) => {\n        setApplication({\n            ...application, [prop]: event.target.value\n        })\n    };\n\n    return (\n        <>\n            <Tooltip title='Create new application'>\n                <i\n                    style={{color: 'white', fontSize: '16px', backgroundColor: props.buttonColor, padding: '10px', borderRadius: '30px', cursor: 'pointer', marginLeft: '10px'}}\n                    className={props.buttonIcon}\n                    onClick={handleOpen}></i>\n            </Tooltip>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {'Creating new application'}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                       Use the form below to add an application to the database.\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"business_name\"\n                        type=\"text\"\n                        fullWidth\n                        variant=\"standard\"\n                        value={application.business_name}\n                        onChange={event => {\n                            handleFieldDidChange('business_name', event)\n                            }\n                        }\n                        sx={{ m: 1, width: '25ch' }}\n                        InputProps={{\n                            startAdornment: <InputAdornment position=\"start\">Name</InputAdornment>,\n                        }}\n                    />\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"business_description\"\n                        type=\"text\"\n                        fullWidth\n                        variant=\"standard\"\n                        value={application.business_description}\n                        sx={{ m: 1, width: '25ch' }}\n                        InputProps={{\n                            startAdornment: <InputAdornment position=\"start\">Description</InputAdornment>,\n                        }}\n                        onChange={(event) => {\n                            handleFieldDidChange('business_description', event)\n                            }\n                        }\n                    />\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"role_type\"\n                        type=\"text\"\n                        fullWidth\n                        variant=\"standard\"\n                        value={application.role_type}\n                        onChange={(event) => {\n                            handleFieldDidChange('role_type', event)\n                        }}\n                        sx={{ m: 1, width: '25ch' }}\n                        InputProps={{\n                            startAdornment: <InputAdornment position=\"start\">Role</InputAdornment>,\n                        }}\n                    />\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose}>Cancel</Button>\n                    <Button onClick={handleConfirm} autoFocus>\n                        Add\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n\n}","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/jobapp/components/StatusMarker.js",[],"/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/jobapp/components/options/OptionsGroup.js",["143"],"/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/jobapp/components/options/AcceptRejectModal.js",["144"],"import React, {useState} from \"react\";\nimport {\n    Dialog,\n    DialogContent,\n    DialogTitle,\n    DialogActions,\n    Button,\n    DialogContentText,\n    Snackbar,\n    Tooltip\n} from \"@mui/material\";\nimport \"./AcceptRejectModal.css\"\n\n/**\n * The AcceptRejectModal stateful component accepts the application prop and contains information regarding the dialog\n * presented by it. Stores a state variable - upon button clicked, state variable is toggled and the modal\n * is shown with a set of options allowing the user to confirm the action.\n * @constructor\n */\nexport const AcceptRejectModal = (props) => {\n\n    /**\n     * A state variable that represents the current \"show\" state of the modal by toggling\n     * display CSS value.\n     */\n    const [open, setOpen] = useState(false)\n\n    /**\n     * Handles action taken on button click. When clicked, toggles the\n     * state of the AcceptRejectModal from closed to open.\n     */\n    const handleOpen = () => {\n        setOpen(true)\n    }\n\n    /**\n     * Handles action taken when the user chooses to cancel the action taken.\n     */\n    const handleClose = () => {\n        setOpen(false)\n    }\n\n    /**\n     * Handles action taken on confirm\n     */\n    const handleConfirm = () => {\n        props.handler()\n        setOpen(false)\n    }\n\n    return (\n        <>\n            <Tooltip title={props.buttonTooltip}>\n            <i\n                style={{color: props.buttonColor, fontSize: '20px'}}\n                className={props.buttonIcon}\n                onClick={handleOpen}></i>\n            </Tooltip>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {`Are you sure you want to ${props.action}?`}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                       This action may be changed at any time by navigating to the application entry's\n                        options menu.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose}>Cancel</Button>\n                    <Button onClick={handleConfirm} autoFocus>\n                        Confirm\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n\n}","/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp-Client/src/pages/jobapp/components/options/ModifyModal.js",["145"],{"ruleId":"146","severity":1,"message":"147","line":1,"column":8,"nodeType":"148","messageId":"149","endLine":1,"endColumn":12},{"ruleId":"146","severity":1,"message":"150","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":11},{"ruleId":"146","severity":1,"message":"151","line":10,"column":5,"nodeType":"148","messageId":"149","endLine":10,"endColumn":11},{"ruleId":"146","severity":1,"message":"152","line":11,"column":5,"nodeType":"148","messageId":"149","endLine":11,"endColumn":13},{"ruleId":"146","severity":1,"message":"153","line":12,"column":5,"nodeType":"148","messageId":"149","endLine":12,"endColumn":16},{"ruleId":"146","severity":1,"message":"154","line":12,"column":18,"nodeType":"148","messageId":"149","endLine":12,"endColumn":28},{"ruleId":"146","severity":1,"message":"155","line":16,"column":8,"nodeType":"148","messageId":"149","endLine":16,"endColumn":20},{"ruleId":"146","severity":1,"message":"155","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":20},{"ruleId":"146","severity":1,"message":"156","line":9,"column":5,"nodeType":"148","messageId":"149","endLine":9,"endColumn":13},{"ruleId":"146","severity":1,"message":"155","line":16,"column":8,"nodeType":"148","messageId":"149","endLine":16,"endColumn":20},{"ruleId":"157","replacedBy":"158"},{"ruleId":"159","replacedBy":"160"},{"ruleId":"146","severity":1,"message":"147","line":1,"column":8,"nodeType":"148","messageId":"149","endLine":1,"endColumn":12},{"ruleId":"146","severity":1,"message":"150","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":11},{"ruleId":"146","severity":1,"message":"151","line":10,"column":5,"nodeType":"148","messageId":"149","endLine":10,"endColumn":11},{"ruleId":"146","severity":1,"message":"152","line":11,"column":5,"nodeType":"148","messageId":"149","endLine":11,"endColumn":13},{"ruleId":"146","severity":1,"message":"153","line":12,"column":5,"nodeType":"148","messageId":"149","endLine":12,"endColumn":16},{"ruleId":"146","severity":1,"message":"154","line":12,"column":18,"nodeType":"148","messageId":"149","endLine":12,"endColumn":28},{"ruleId":"146","severity":1,"message":"155","line":16,"column":8,"nodeType":"148","messageId":"149","endLine":16,"endColumn":20},{"ruleId":"146","severity":1,"message":"155","line":3,"column":8,"nodeType":"148","messageId":"149","endLine":3,"endColumn":20},{"ruleId":"146","severity":1,"message":"156","line":9,"column":5,"nodeType":"148","messageId":"149","endLine":9,"endColumn":13},{"ruleId":"146","severity":1,"message":"155","line":16,"column":8,"nodeType":"148","messageId":"149","endLine":16,"endColumn":20},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'App' is defined but never used.","'Select' is defined but never used.","'MenuItem' is defined but never used.","'FormControl' is defined but never used.","'InputLabel' is defined but never used.","'ReactToolTip' is defined but never used.","'Snackbar' is defined but never used.","no-native-reassign",["161"],"no-negated-in-lhs",["162"],"no-global-assign","no-unsafe-negation"]