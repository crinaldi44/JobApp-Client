{"ast":null,"code":"var _jsxFileName = \"/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/ApplicationTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport App from \"../../../App\";\nimport ApplicationTableCell from \"./ApplicationTableCell\";\nimport './ApplicationTable.css';\n/**\n * The ApplicationTable is meant to retrieve and store data\n * @returns {JSX.Element}\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ApplicationTable = () => {\n  _s();\n\n  /**\n   * Represents the applications as an array of JSON objects.\n   */\n  const [applications, setApplications] = useState([]);\n  const [applicationsOrig, setApplicationsOrig] = useState([]);\n\n  const forceRerender = () => {\n    getData().then(console.log(applicationsOrig));\n  };\n\n  async function getData() {\n    const response = await axios.get('http://localhost:3000/api/applications').catch(error => {\n      console.error(error);\n    });\n    const data = await response.data;\n    setApplications(data);\n    setApplicationsOrig(data);\n  }\n  /**\n   * Retrieve the data from the server.\n   */\n\n\n  useEffect(() => {\n    // (async () => {\n    //     const response = await axios.get('http://localhost:3000/api/applications')\n    //         .catch(error => {console.error(error)})\n    //     const data = await response.data\n    //     setApplications(data)\n    //     setApplicationsOrig(data)\n    // })();\n    getData();\n  }, []);\n  /**\n   * Filters data using map.\n   * @param data\n   */\n\n  const filterData = data => {\n    setApplications(applicationsOrig.filter(s => s.business_name.toLowerCase().includes(data.toLowerCase())));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"application__search__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Search application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"search__application__input\",\n        placeholder: \"Enter the name of the application\",\n        onChange: text => {\n          filterData(text.target.value);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__table__container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Business name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Role type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Created date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Options\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: applications.map(app => /*#__PURE__*/_jsxDEV(ApplicationTableCell, {\n            application: app,\n            rerender: forceRerender\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n/**\n * The ApplicationTable is meant to retrieve and store data\n * @returns {JSX.Element}\n */\n\n\n_s(ApplicationTable, \"RpUSBFeSJvvJMYCdJlNrdTcXCS0=\");\n\n_c = ApplicationTable;\nexport default ApplicationTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApplicationTable\");","map":{"version":3,"sources":["/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/ApplicationTable.js"],"names":["React","useEffect","useState","axios","App","ApplicationTableCell","ApplicationTable","applications","setApplications","applicationsOrig","setApplicationsOrig","forceRerender","getData","then","console","log","response","get","catch","error","data","filterData","filter","s","business_name","toLowerCase","includes","text","target","value","map","app"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport axios from \"axios\";\nimport App from \"../../../App\";\nimport ApplicationTableCell from \"./ApplicationTableCell\";\nimport './ApplicationTable.css'\n\n/**\n * The ApplicationTable is meant to retrieve and store data\n * @returns {JSX.Element}\n */\nconst ApplicationTable = () => {\n\n    /**\n     * Represents the applications as an array of JSON objects.\n     */\n    const [applications, setApplications] = useState([])\n\n    const [applicationsOrig, setApplicationsOrig] = useState([])\n\n    const forceRerender = () => {\n        getData().then(console.log(applicationsOrig))\n    }\n\n    async function getData() {\n        const response = await axios.get('http://localhost:3000/api/applications')\n            .catch(error => {console.error(error)})\n        const data = await response.data\n        setApplications(data)\n        setApplicationsOrig(data)\n    }\n\n    /**\n     * Retrieve the data from the server.\n     */\n    useEffect(() => {\n        // (async () => {\n        //     const response = await axios.get('http://localhost:3000/api/applications')\n        //         .catch(error => {console.error(error)})\n        //     const data = await response.data\n        //     setApplications(data)\n        //     setApplicationsOrig(data)\n        // })();\n        getData()\n    }, [])\n\n    /**\n     * Filters data using map.\n     * @param data\n     */\n    const filterData = data => {\n        setApplications(applicationsOrig.filter(s => s.business_name.toLowerCase().includes(data.toLowerCase())))\n    }\n\n    return (\n        <>\n            <div className='application__search__container'>\n                <h2>Search application</h2>\n                <input\n                    className='search__application__input'\n                    placeholder='Enter the name of the application'\n                    onChange={text => {filterData(text.target.value)}}/>\n            </div>\n        <div className='app__table__container'>\n            <table>\n                <thead>\n                <tr>\n                    <th>Business name</th>\n                    <th>Description</th>\n                    <th>Role type</th>\n                    <th>Status</th>\n                    <th>Created date</th>\n                    <th>Options</th>\n                </tr>\n                </thead>\n                <tbody>\n                {applications.map(app => (\n                    <ApplicationTableCell\n                        application={app}\n                        rerender={forceRerender}\n                    />\n                ))}\n                </tbody>\n            </table>\n        </div>\n            </>\n    )\n}\n\n/**\n * The ApplicationTable is meant to retrieve and store data\n * @returns {JSX.Element}\n */\nexport default ApplicationTable\n"]},"metadata":{},"sourceType":"module"}