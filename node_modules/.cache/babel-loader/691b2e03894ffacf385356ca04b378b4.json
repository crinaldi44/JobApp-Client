{"ast":null,"code":"var _jsxFileName = \"/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/ApplicationTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport axios from \"axios\";\nimport App from \"../../../App\";\nimport ApplicationTableCell from \"./ApplicationTableCell\";\nimport './ApplicationTable.css';\n/**\n * The ApplicationTable is meant to retrieve and store data\n * @returns {JSX.Element}\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ApplicationTable = () => {\n  _s();\n\n  /**\n   * Represents the applications as an array of JSON objects.\n   */\n  const [applications, setApplications] = useState([]);\n  /**\n   * Retrieve the data from the server.\n   */\n\n  useEffect(() => {\n    (async () => {\n      const response = await axios.get('http://localhost:3000/api/applications').catch(error => {\n        console.error(error);\n      });\n      const data = response.data;\n      setApplications(data);\n    })();\n  }, []);\n  /**\n   * Filters data using map.\n   * @param data\n   */\n\n  const filterData = data => {\n    setApplications(applications.filter(s => s.business_name.contains(data)));\n    console.log(JSON.stringify(applications));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"application__search__container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Search application\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: text => {\n          filterData(text);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"app__table__container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Business name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Role type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Created date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"Options\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: applications.map(app => /*#__PURE__*/_jsxDEV(ApplicationTableCell, {\n            business_name: app.business_name,\n            business_description: app.business_description,\n            role_type: app.role_type,\n            status: app.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n};\n/**\n * The ApplicationTable is meant to retrieve and store data\n * @returns {JSX.Element}\n */\n\n\n_s(ApplicationTable, \"/nbs5sQL2UzqDwq/om4lghfycVI=\");\n\n_c = ApplicationTable;\nexport default ApplicationTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ApplicationTable\");","map":{"version":3,"sources":["/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/ApplicationTable.js"],"names":["React","useEffect","useState","axios","App","ApplicationTableCell","ApplicationTable","applications","setApplications","response","get","catch","error","console","data","filterData","filter","s","business_name","contains","log","JSON","stringify","text","map","app","business_description","role_type","status"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,OAAO,wBAAP;AAEA;AACA;AACA;AACA;;;;;AACA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAE3B;AACJ;AACA;AACI,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,CAAC,EAAD,CAAhD;AAEA;AACJ;AACA;;AACID,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACT,YAAMQ,QAAQ,GAAG,MAAMN,KAAK,CAACO,GAAN,CAAU,wCAAV,EAClBC,KADkB,CACZC,KAAK,IAAI;AAACC,QAAAA,OAAO,CAACD,KAAR,CAAcA,KAAd;AAAqB,OADnB,CAAvB;AAEA,YAAME,IAAI,GAAGL,QAAQ,CAACK,IAAtB;AACAN,MAAAA,eAAe,CAACM,IAAD,CAAf;AACH,KALD;AAMH,GAPQ,EAON,EAPM,CAAT;AASA;AACJ;AACA;AACA;;AACI,QAAMC,UAAU,GAAGD,IAAI,IAAI;AACvBN,IAAAA,eAAe,CAACD,YAAY,CAACS,MAAb,CAAoBC,CAAC,IAAIA,CAAC,CAACC,aAAF,CAAgBC,QAAhB,CAAyBL,IAAzB,CAAzB,CAAD,CAAf;AACAD,IAAAA,OAAO,CAACO,GAAR,CAAYC,IAAI,CAACC,SAAL,CAAef,YAAf,CAAZ;AACH,GAHD;;AAKA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,gCAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,QAAQ,EAAEgB,IAAI,IAAI;AAACR,UAAAA,UAAU,CAACQ,IAAD,CAAV;AAAiB;AAA3C;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAKA;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,6BACI;AAAA,gCACI;AAAA,iCACA;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ,eAMI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAWI;AAAA,oBACChB,YAAY,CAACiB,GAAb,CAAiBC,GAAG,iBACjB,QAAC,oBAAD;AACI,YAAA,aAAa,EAAEA,GAAG,CAACP,aADvB;AAEI,YAAA,oBAAoB,EAAEO,GAAG,CAACC,oBAF9B;AAGI,YAAA,SAAS,EAAED,GAAG,CAACE,SAHnB;AAII,YAAA,MAAM,EAAEF,GAAG,CAACG;AAJhB;AAAA;AAAA;AAAA;AAAA,kBADH;AADD;AAAA;AAAA;AAAA;AAAA,gBAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALA;AAAA,kBADJ;AAgCH,CA5DD;AA8DA;AACA;AACA;AACA;;;GAjEMtB,gB;;KAAAA,gB;AAkEN,eAAeA,gBAAf","sourcesContent":["import React, {useEffect, useState} from 'react'\nimport axios from \"axios\";\nimport App from \"../../../App\";\nimport ApplicationTableCell from \"./ApplicationTableCell\";\nimport './ApplicationTable.css'\n\n/**\n * The ApplicationTable is meant to retrieve and store data\n * @returns {JSX.Element}\n */\nconst ApplicationTable = () => {\n\n    /**\n     * Represents the applications as an array of JSON objects.\n     */\n    const [applications, setApplications] = useState([])\n\n    /**\n     * Retrieve the data from the server.\n     */\n    useEffect(() => {\n        (async () => {\n            const response = await axios.get('http://localhost:3000/api/applications')\n                .catch(error => {console.error(error)})\n            const data = response.data\n            setApplications(data)\n        })();\n    }, [])\n\n    /**\n     * Filters data using map.\n     * @param data\n     */\n    const filterData = data => {\n        setApplications(applications.filter(s => s.business_name.contains(data)))\n        console.log(JSON.stringify(applications))\n    }\n\n    return (\n        <>\n            <div className='application__search__container'>\n                <h2>Search application</h2>\n                <input onChange={text => {filterData(text)}}/>\n            </div>\n        <div className='app__table__container'>\n            <table>\n                <thead>\n                <tr>\n                    <th>Business name</th>\n                    <th>Description</th>\n                    <th>Role type</th>\n                    <th>Status</th>\n                    <th>Created date</th>\n                    <th>Options</th>\n                </tr>\n                </thead>\n                <tbody>\n                {applications.map(app => (\n                    <ApplicationTableCell\n                        business_name={app.business_name}\n                        business_description={app.business_description}\n                        role_type={app.role_type}\n                        status={app.status}\n                    />\n                ))}\n                </tbody>\n            </table>\n        </div>\n            </>\n    )\n}\n\n/**\n * The ApplicationTable is meant to retrieve and store data\n * @returns {JSX.Element}\n */\nexport default ApplicationTable\n"]},"metadata":{},"sourceType":"module"}