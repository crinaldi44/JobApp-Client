{"ast":null,"code":"var _jsxFileName = \"/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/options/AcceptRejectModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Dialog, DialogContent, DialogTitle, DialogActions, Button, DialogContentText } from \"@mui/material\";\nimport \"./AcceptRejectModal.css\";\nimport ReactToolTip from \"react-tooltip\";\n/**\n * The AcceptRejectModal stateful component accepts the application prop and contains information regarding the dialog\n * presented by it. Stores a state variable - upon button clicked, state variable is toggled and the modal\n * is shown with a set of options allowing the user to confirm the action.\n * @constructor\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AcceptRejectModal = props => {\n  _s();\n\n  /**\n   * A state variable that represents the current \"show\" state of the modal by toggling\n   * display CSS value.\n   */\n  const [open, setOpen] = useState(false);\n  /**\n   * Handles action taken on button click. When clicked, toggles the\n   * state of the AcceptRejectModal from closed to open.\n   */\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  /**\n   * Handles action taken when the user chooses to cancel the action taken.\n   */\n\n\n  const handleClose = func => {\n    if (func) {}\n\n    setOpen(false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ReactToolTip, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n      style: {\n        color: props.buttonColor,\n        fontSize: '20px'\n      },\n      \"data-tip\": props.buttonTooltip,\n      className: props.buttonIcon,\n      onClick: handleOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: `Are you sure you want to ${props.action}?`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: /*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-description\",\n          children: \"This action may be changed at any time by navigating to the application entry's options menu.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose(props.handler),\n          autoFocus: true,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(AcceptRejectModal, \"xG1TONbKtDWtdOTrXaTAsNhPg/Q=\");\n\n_c = AcceptRejectModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"AcceptRejectModal\");","map":{"version":3,"sources":["/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/options/AcceptRejectModal.js"],"names":["React","useState","Dialog","DialogContent","DialogTitle","DialogActions","Button","DialogContentText","ReactToolTip","AcceptRejectModal","props","open","setOpen","handleOpen","handleClose","func","color","buttonColor","fontSize","buttonTooltip","buttonIcon","action","handler"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,MAAR,EAAgBC,aAAhB,EAA+BC,WAA/B,EAA4CC,aAA5C,EAA2DC,MAA3D,EAAmEC,iBAAnE,QAA4F,eAA5F;AACA,OAAO,yBAAP;AACA,OAAOC,YAAP,MAAyB,eAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;;;;AACA,OAAO,MAAMC,iBAAiB,GAAIC,KAAD,IAAW;AAAA;;AAExC;AACJ;AACA;AACA;AACI,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,KAAD,CAAhC;AAEA;AACJ;AACA;AACA;;AACI,QAAMY,UAAU,GAAG,MAAM;AACrBD,IAAAA,OAAO,CAAC,IAAD,CAAP;AACH,GAFD;AAIA;AACJ;AACA;;;AACI,QAAME,WAAW,GAAIC,IAAD,IAAU;AAC1B,QAAIA,IAAJ,EAAU,CAET;;AACDH,IAAAA,OAAO,CAAC,KAAD,CAAP;AACH,GALD;;AAOA,sBACI;AAAA,4BACI,QAAC,YAAD;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AACI,MAAA,KAAK,EAAE;AAACI,QAAAA,KAAK,EAAEN,KAAK,CAACO,WAAd;AAA2BC,QAAAA,QAAQ,EAAE;AAArC,OADX;AAEI,kBAAUR,KAAK,CAACS,aAFpB;AAGI,MAAA,SAAS,EAAET,KAAK,CAACU,UAHrB;AAII,MAAA,OAAO,EAAEP;AAJb;AAAA;AAAA;AAAA;AAAA,YAFJ,eAOI,QAAC,MAAD;AACI,MAAA,IAAI,EAAEF,IADV;AAEI,MAAA,OAAO,EAAEG,WAFb;AAGI,yBAAgB,oBAHpB;AAII,0BAAiB,0BAJrB;AAAA,8BAMI,QAAC,WAAD;AAAa,QAAA,EAAE,EAAC,oBAAhB;AAAA,kBACM,4BAA2BJ,KAAK,CAACW,MAAO;AAD9C;AAAA;AAAA;AAAA;AAAA,cANJ,eASI,QAAC,aAAD;AAAA,+BACI,QAAC,iBAAD;AAAmB,UAAA,EAAE,EAAC,0BAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cATJ,eAeI,QAAC,aAAD;AAAA,gCACI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEP,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI,QAAC,MAAD;AAAQ,UAAA,OAAO,EAAEA,WAAW,CAACJ,KAAK,CAACY,OAAP,CAA5B;AAA6C,UAAA,SAAS,MAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAPJ;AAAA,kBADJ;AAiCH,CA3DM;;GAAMb,iB;;KAAAA,iB","sourcesContent":["import React, {useState} from \"react\";\nimport {Dialog, DialogContent, DialogTitle, DialogActions, Button, DialogContentText } from \"@mui/material\";\nimport \"./AcceptRejectModal.css\"\nimport ReactToolTip from \"react-tooltip\";\n\n/**\n * The AcceptRejectModal stateful component accepts the application prop and contains information regarding the dialog\n * presented by it. Stores a state variable - upon button clicked, state variable is toggled and the modal\n * is shown with a set of options allowing the user to confirm the action.\n * @constructor\n */\nexport const AcceptRejectModal = (props) => {\n\n    /**\n     * A state variable that represents the current \"show\" state of the modal by toggling\n     * display CSS value.\n     */\n    const [open, setOpen] = useState(false)\n\n    /**\n     * Handles action taken on button click. When clicked, toggles the\n     * state of the AcceptRejectModal from closed to open.\n     */\n    const handleOpen = () => {\n        setOpen(true)\n    }\n\n    /**\n     * Handles action taken when the user chooses to cancel the action taken.\n     */\n    const handleClose = (func) => {\n        if (func) {\n\n        }\n        setOpen(false)\n    }\n\n    return (\n        <>\n            <ReactToolTip/>\n            <i\n                style={{color: props.buttonColor, fontSize: '20px'}}\n                data-tip={props.buttonTooltip}\n                className={props.buttonIcon}\n                onClick={handleOpen}></i>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {`Are you sure you want to ${props.action}?`}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                       This action may be changed at any time by navigating to the application entry's\n                        options menu.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose}>Cancel</Button>\n                    <Button onClick={handleClose(props.handler)} autoFocus>\n                        Confirm\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}