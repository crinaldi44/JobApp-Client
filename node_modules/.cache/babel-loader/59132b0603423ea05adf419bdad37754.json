{"ast":null,"code":"var _jsxFileName = \"/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/options/ModifyModal.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { Dialog, DialogContent, DialogTitle, DialogActions, Button, DialogContentText, TextField, Select, MenuItem, FormControl, InputLabel, InputAdornment, Tooltip } from \"@mui/material\";\nimport \"./AcceptRejectModal.css\";\nimport ReactToolTip from \"react-tooltip\";\n/**\n * The ModifyModal stateful component accepts the application prop and contains information regarding the dialog\n * presented by it. Stores a state variable - upon button clicked, state variable is toggled and the modal\n * is shown with a set of options allowing the user to confirm the action.\n * @constructor\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const ModifyModal = props => {\n  _s();\n\n  /**\n   * A state variable that represents the current \"show\" state of the modal by toggling\n   * display CSS value.\n   */\n  const [open, setOpen] = useState(false);\n  /**\n   * State variable that represents the application with changes to commit.\n   */\n\n  const [application, setApplication] = useState(props.application);\n  /**\n   * Handles action taken on button click. When clicked, toggles the\n   * state of the AcceptRejectModal from closed to open.\n   */\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n  /**\n   * Handles action taken when the user chooses to cancel the action taken.\n   */\n\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  /**\n   * Handles action taken on confirm\n   */\n\n\n  const handleConfirm = () => {\n    props.handler();\n    setOpen(false);\n  };\n  /**\n   * Handles a change when the textfield input changes.\n   * @type {(function(*): void)|*}\n   */\n\n\n  const handleFieldDidChange = (prop, event) => {\n    setApplication({ ...application,\n      [prop]: event.target.value\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n      title: \"Modify application\",\n      children: /*#__PURE__*/_jsxDEV(\"i\", {\n        style: {\n          color: props.buttonColor,\n          fontSize: '20px'\n        },\n        className: props.buttonIcon,\n        onClick: handleOpen\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: open,\n      onClose: handleClose,\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n        id: \"alert-dialog-title\",\n        children: `Modifying application: ${application.business_name}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n        children: [/*#__PURE__*/_jsxDEV(DialogContentText, {\n          id: \"alert-dialog-description\",\n          children: \"Note: This action may be changed at any time by navigating to the application entry's options menu.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"business_name\",\n          type: \"text\",\n          fullWidth: true,\n          variant: \"standard\",\n          value: application.business_name,\n          onChange: event => {\n            handleFieldDidChange('business_name', event);\n          },\n          sx: {\n            m: 1,\n            width: '25ch'\n          },\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 45\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"business_description\",\n          type: \"text\",\n          fullWidth: true,\n          variant: \"standard\",\n          value: application.business_description,\n          sx: {\n            m: 1,\n            width: '25ch'\n          },\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: \"Description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 45\n            }, this)\n          },\n          onChange: event => {\n            handleFieldDidChange('business_description', event);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          autoFocus: true,\n          margin: \"dense\",\n          id: \"role_type\",\n          type: \"text\",\n          fullWidth: true,\n          variant: \"standard\",\n          value: application.role_type,\n          onChange: event => {\n            handleFieldDidChange('role_type', event);\n          },\n          sx: {\n            m: 1,\n            width: '25ch'\n          },\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              children: \"Role\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 45\n            }, this)\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(FormControl, {\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            id: \"demo-simple-select-label\",\n            children: \"Status\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"demo-simple-select-label\",\n            id: \"demo-simple-select\",\n            value: application.status,\n            label: \"Status\",\n            onChange: event => {\n              handleFieldDidChange('status', event);\n            },\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 'PENDING',\n              children: \"PENDING\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 'ACCEPTED',\n              children: \"ACCEPTED\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 'REJECTED',\n              children: \"REJECTED\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleClose,\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: handleConfirm,\n          autoFocus: true,\n          children: \"Confirm\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n};\n\n_s(ModifyModal, \"yvYDv3Y/Fx/XugNaDKOC5r1VQdc=\");\n\n_c = ModifyModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModifyModal\");","map":{"version":3,"sources":["/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/options/ModifyModal.js"],"names":["React","useState","Dialog","DialogContent","DialogTitle","DialogActions","Button","DialogContentText","TextField","Select","MenuItem","FormControl","InputLabel","InputAdornment","Tooltip","ReactToolTip","ModifyModal","props","open","setOpen","application","setApplication","handleOpen","handleClose","handleConfirm","handler","handleFieldDidChange","prop","event","target","value","color","buttonColor","fontSize","buttonIcon","business_name","m","width","startAdornment","business_description","role_type","status"],"mappings":"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","sourcesContent":["import React, {useState} from \"react\";\nimport {\n    Dialog,\n    DialogContent,\n    DialogTitle,\n    DialogActions,\n    Button,\n    DialogContentText,\n    TextField,\n    Select,\n    MenuItem,\n    FormControl, InputLabel,\n    InputAdornment, Tooltip\n} from \"@mui/material\";\nimport \"./AcceptRejectModal.css\"\nimport ReactToolTip from \"react-tooltip\";\n\n/**\n * The ModifyModal stateful component accepts the application prop and contains information regarding the dialog\n * presented by it. Stores a state variable - upon button clicked, state variable is toggled and the modal\n * is shown with a set of options allowing the user to confirm the action.\n * @constructor\n */\nexport const ModifyModal = (props) => {\n\n    /**\n     * A state variable that represents the current \"show\" state of the modal by toggling\n     * display CSS value.\n     */\n    const [open, setOpen] = useState(false)\n\n    /**\n     * State variable that represents the application with changes to commit.\n     */\n    const [application, setApplication] = useState(props.application)\n\n    /**\n     * Handles action taken on button click. When clicked, toggles the\n     * state of the AcceptRejectModal from closed to open.\n     */\n    const handleOpen = () => {\n        setOpen(true)\n    }\n\n    /**\n     * Handles action taken when the user chooses to cancel the action taken.\n     */\n    const handleClose = () => {\n        setOpen(false)\n    }\n\n    /**\n     * Handles action taken on confirm\n     */\n    const handleConfirm = () => {\n        props.handler()\n        setOpen(false)\n    }\n\n    /**\n     * Handles a change when the textfield input changes.\n     * @type {(function(*): void)|*}\n     */\n    const handleFieldDidChange = (prop, event) => {\n        setApplication({\n            ...application, [prop]: event.target.value\n        })\n    };\n\n    return (\n        <>\n            <Tooltip title='Modify application'>\n                <i\n                    style={{color: props.buttonColor, fontSize: '20px'}}\n                    className={props.buttonIcon}\n                    onClick={handleOpen}></i>\n            </Tooltip>\n            <Dialog\n                open={open}\n                onClose={handleClose}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">\n                    {`Modifying application: ${application.business_name}`}\n                </DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                       Note: This action may be changed at any time by navigating to the application entry's\n                        options menu.\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"business_name\"\n                        type=\"text\"\n                        fullWidth\n                        variant=\"standard\"\n                        value={application.business_name}\n                        onChange={event => {\n                            handleFieldDidChange('business_name', event)\n                            }\n                        }\n                        sx={{ m: 1, width: '25ch' }}\n                        InputProps={{\n                            startAdornment: <InputAdornment position=\"start\">Name</InputAdornment>,\n                        }}\n                    />\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"business_description\"\n                        type=\"text\"\n                        fullWidth\n                        variant=\"standard\"\n                        value={application.business_description}\n                        sx={{ m: 1, width: '25ch' }}\n                        InputProps={{\n                            startAdornment: <InputAdornment position=\"start\">Description</InputAdornment>,\n                        }}\n                        onChange={(event) => {\n                            handleFieldDidChange('business_description', event)\n                            }\n                        }\n                    />\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"role_type\"\n                        type=\"text\"\n                        fullWidth\n                        variant=\"standard\"\n                        value={application.role_type}\n                        onChange={(event) => {\n                            handleFieldDidChange('role_type', event)\n                        }}\n                        sx={{ m: 1, width: '25ch' }}\n                        InputProps={{\n                            startAdornment: <InputAdornment position=\"start\">Role</InputAdornment>,\n                        }}\n                    />\n                    <FormControl fullWidth>\n                        <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\n                        <Select\n                            labelId=\"demo-simple-select-label\"\n                            id=\"demo-simple-select\"\n                            value={application.status}\n                            label=\"Status\"\n                            onChange={(event) => {\n                                handleFieldDidChange('status', event)\n                            }}\n                        >\n                            <MenuItem value={'PENDING'}>PENDING</MenuItem>\n                            <MenuItem value={'ACCEPTED'}>ACCEPTED</MenuItem>\n                            <MenuItem value={'REJECTED'}>REJECTED</MenuItem>\n                        </Select>\n                    </FormControl>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={handleClose}>Cancel</Button>\n                    <Button onClick={handleConfirm} autoFocus>\n                        Confirm\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        </>\n    )\n\n}"]},"metadata":{},"sourceType":"module"}