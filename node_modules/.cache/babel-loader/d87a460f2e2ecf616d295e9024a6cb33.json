{"ast":null,"code":"var _jsxFileName = \"/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/options/OptionsGroup.js\";\nimport React from \"react\";\nimport './OptionsGroup.css';\nimport ReactToolTip from \"react-tooltip\";\nimport { AcceptRejectModal } from \"./AcceptRejectModal\";\nimport axios from \"axios\";\nimport { ModifyModal } from \"./ModifyModal\";\n/**\n * The OptionsGroup stateless functional component allows a user to modify a given component. For each table cell,\n * the object from the database entry is passed as a prop. Upon clicking an object, the ID is passed down further to a\n * confirmation modal, which will confirm that the user wishes to proceed with the operation OR it presents\n * with a popup to change the settings from the application.\n * @param props props.app stores the application as a prop, so as to prepare the options modal\n * @returns {JSX.Element}\n * @constructor\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OptionsGroup = props => {\n  /**\n   * Handles action taken when the user marks an item as accepted.\n   */\n  const handleMarkAccepted = async () => {\n    await axios.patch(`http://localhost:3000/api/applications/${props.app.id}`, {\n      status: 'ACCEPTED'\n    }).then(props.rerender()).catch(error => console.error(error));\n  };\n  /**\n   * Handles action taken when the user marks an item as rejected.\n   */\n\n\n  const handleDeleteApp = async () => {\n    await axios.delete(`http://localhost:3000/api/applications/${props.app.id}`).then(props.rerender()).catch(error => console.error(error));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"options__group__container\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"options__group__list\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(ModifyModal, {\n          handler: props.rerender,\n          buttonColor: '#51629D',\n          buttonIcon: 'fas fa-cogs',\n          buttonTooltip: \"Modify application\",\n          application: props.app\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(AcceptRejectModal, {\n          action: \"mark as accepted\",\n          handler: handleMarkAccepted,\n          buttonColor: '#88E486',\n          buttonIcon: 'fa fa-thumbs-up',\n          buttonTooltip: \"Mark as accepted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(AcceptRejectModal, {\n          action: \"delete this application\",\n          handler: handleDeleteApp,\n          buttonColor: '#E48C86',\n          buttonIcon: 'fas fa-trash',\n          buttonTooltip: \"Delete application\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_c = OptionsGroup;\nexport default OptionsGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"OptionsGroup\");","map":{"version":3,"sources":["/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/options/OptionsGroup.js"],"names":["React","ReactToolTip","AcceptRejectModal","axios","ModifyModal","OptionsGroup","props","handleMarkAccepted","patch","app","id","status","then","rerender","catch","error","console","handleDeleteApp","delete"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,SAAQC,iBAAR,QAAgC,qBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,WAAR,QAA0B,eAA1B;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAE5B;AACJ;AACA;AACI,QAAMC,kBAAkB,GAAG,YAAY;AACnC,UAAMJ,KAAK,CAACK,KAAN,CAAa,0CAAyCF,KAAK,CAACG,GAAN,CAAUC,EAAG,EAAnE,EAAsE;AACxEC,MAAAA,MAAM,EAAE;AADgE,KAAtE,EAEHC,IAFG,CAEEN,KAAK,CAACO,QAAN,EAFF,EAEoBC,KAFpB,CAE0BC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAFnC,CAAN;AAGH,GAJD;AAMA;AACJ;AACA;;;AACI,QAAME,eAAe,GAAG,YAAY;AAChC,UAAMd,KAAK,CAACe,MAAN,CAAc,0CAAyCZ,KAAK,CAACG,GAAN,CAAUC,EAAG,EAApE,EACDE,IADC,CACIN,KAAK,CAACO,QAAN,EADJ,EAEDC,KAFC,CAEKC,KAAK,IAAIC,OAAO,CAACD,KAAR,CAAcA,KAAd,CAFd,CAAN;AAGH,GAJD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA,2BACI;AAAI,MAAA,SAAS,EAAC,sBAAd;AAAA,8BACI;AAAA,+BACI,QAAC,WAAD;AACI,UAAA,OAAO,EAAET,KAAK,CAACO,QADnB;AAEI,UAAA,WAAW,EAAE,SAFjB;AAGI,UAAA,UAAU,EAAE,aAHhB;AAII,UAAA,aAAa,EAAC,oBAJlB;AAKI,UAAA,WAAW,EAAEP,KAAK,CAACG;AALvB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAUI;AAAA,+BACI,QAAC,iBAAD;AACI,UAAA,MAAM,EAAE,kBADZ;AAEI,UAAA,OAAO,EAAEF,kBAFb;AAGI,UAAA,WAAW,EAAE,SAHjB;AAII,UAAA,UAAU,EAAE,iBAJhB;AAKI,UAAA,aAAa,EAAC;AALlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAVJ,eAkBI;AAAA,+BACI,QAAC,iBAAD;AACI,UAAA,MAAM,EAAE,yBADZ;AAEI,UAAA,OAAO,EAAEU,eAFb;AAGI,UAAA,WAAW,EAAE,SAHjB;AAII,UAAA,UAAU,EAAE,cAJhB;AAKI,UAAA,aAAa,EAAC;AALlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAlBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH,CApDD;;KAAMZ,Y;AAsDN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\nimport './OptionsGroup.css'\nimport ReactToolTip from \"react-tooltip\";\nimport {AcceptRejectModal} from \"./AcceptRejectModal\";\nimport axios from \"axios\";\nimport {ModifyModal} from \"./ModifyModal\";\n\n/**\n * The OptionsGroup stateless functional component allows a user to modify a given component. For each table cell,\n * the object from the database entry is passed as a prop. Upon clicking an object, the ID is passed down further to a\n * confirmation modal, which will confirm that the user wishes to proceed with the operation OR it presents\n * with a popup to change the settings from the application.\n * @param props props.app stores the application as a prop, so as to prepare the options modal\n * @returns {JSX.Element}\n * @constructor\n */\nconst OptionsGroup = (props) => {\n\n    /**\n     * Handles action taken when the user marks an item as accepted.\n     */\n    const handleMarkAccepted = async () => {\n        await axios.patch(`http://localhost:3000/api/applications/${props.app.id}`, {\n            status: 'ACCEPTED'\n        }).then(props.rerender()).catch(error => console.error(error))\n    }\n\n    /**\n     * Handles action taken when the user marks an item as rejected.\n     */\n    const handleDeleteApp = async () => {\n        await axios.delete(`http://localhost:3000/api/applications/${props.app.id}`)\n            .then(props.rerender())\n            .catch(error => console.error(error))\n    }\n\n    return(\n        <div className='options__group__container'>\n            <ul className='options__group__list'>\n                <li>\n                    <ModifyModal\n                        handler={props.rerender}\n                        buttonColor={'#51629D'}\n                        buttonIcon={'fas fa-cogs'}\n                        buttonTooltip=\"Modify application\"\n                        application={props.app}\n                    />\n                </li>\n                <li>\n                    <AcceptRejectModal\n                        action={\"mark as accepted\"}\n                        handler={handleMarkAccepted}\n                        buttonColor={'#88E486'}\n                        buttonIcon={'fa fa-thumbs-up'}\n                        buttonTooltip=\"Mark as accepted\"/>\n                </li>\n                <li>\n                    <AcceptRejectModal\n                        action={\"delete this application\"}\n                        handler={handleDeleteApp}\n                        buttonColor={'#E48C86'}\n                        buttonIcon={'fas fa-trash'}\n                        buttonTooltip=\"Delete application\"\n                    />\n                </li>\n            </ul>\n        </div>\n    )\n}\n\nexport default OptionsGroup"]},"metadata":{},"sourceType":"module"}