{"ast":null,"code":"var _jsxFileName = \"/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/options/OptionsGroup.js\";\nimport React from \"react\";\nimport './OptionsGroup.css';\nimport ReactToolTip from \"react-tooltip\";\nimport { AcceptRejectModal } from \"./AcceptRejectModal\";\nimport axios from \"axios\";\n/**\n * The OptionsGroup stateless functional component allows a user to modify a given component. For each table cell,\n * the object from the database entry is passed as a prop. Upon clicking an object, the ID is passed down further to a\n * confirmation modal, which will confirm that the user wishes to proceed with the operation OR it presents\n * with a popup to change the settings from the application.\n * @param props props.app stores the application as a prop, so as to prepare the options modal\n * @returns {JSX.Element}\n * @constructor\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst OptionsGroup = props => {\n  /**\n   * Handles action taken when the user marks an item as accepted.\n   */\n  const handleMarkAccepted = async () => {\n    const response = await axios.patch(`http://localhost:3000/api/applications/${props.app.id}`, {\n      status: 'ACCEPTED'\n    });\n  };\n  /**\n   * Handles action taken when the user marks an item as rejected.\n   */\n\n\n  const handleMarkRejected = async () => {\n    const response = await axios.patch(`http://localhost:3000/api/applications/${props.app.id}`, {});\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"options__group__container\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"options__group__list\",\n      children: [/*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          style: {\n            color: '#51629D'\n          },\n          \"data-tip\": \"Edit application\",\n          className: \"fas fa-cogs\",\n          onClick: () => {\n            alert(test);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(AcceptRejectModal, {\n          action: \"mark as rejected\",\n          handler: () => {},\n          buttonColor: '#E48C86',\n          buttonIcon: 'fas fa-times',\n          buttonTooltip: \"Mark as rejected\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n        children: /*#__PURE__*/_jsxDEV(AcceptRejectModal, {\n          action: \"mark as accepted\",\n          handler: () => {},\n          buttonColor: '#88E486',\n          buttonIcon: 'fas fa-check',\n          buttonTooltip: \"Mark as accepted\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n\n_c = OptionsGroup;\nexport default OptionsGroup;\n\nvar _c;\n\n$RefreshReg$(_c, \"OptionsGroup\");","map":{"version":3,"sources":["/Users/chrisrinaldi/Documents/GitHub/JobApp/JobApp Client/jobapp/src/pages/jobapp/components/options/OptionsGroup.js"],"names":["React","ReactToolTip","AcceptRejectModal","axios","OptionsGroup","props","handleMarkAccepted","response","patch","app","id","status","handleMarkRejected","color","alert","test"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAOC,YAAP,MAAyB,eAAzB;AACA,SAAQC,iBAAR,QAAgC,qBAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;AACA,MAAMC,YAAY,GAAIC,KAAD,IAAW;AAE5B;AACJ;AACA;AACI,QAAMC,kBAAkB,GAAG,YAAY;AACnC,UAAMC,QAAQ,GAAG,MAAMJ,KAAK,CAACK,KAAN,CAAa,0CAAyCH,KAAK,CAACI,GAAN,CAAUC,EAAG,EAAnE,EAAsE;AACzFC,MAAAA,MAAM,EAAE;AADiF,KAAtE,CAAvB;AAGH,GAJD;AAMA;AACJ;AACA;;;AACI,QAAMC,kBAAkB,GAAG,YAAY;AACnC,UAAML,QAAQ,GAAG,MAAMJ,KAAK,CAACK,KAAN,CAAa,0CAAyCH,KAAK,CAACI,GAAN,CAAUC,EAAG,EAAnE,EAAsE,EAAtE,CAAvB;AAGH,GAJD;;AAMA,sBACI;AAAK,IAAA,SAAS,EAAC,2BAAf;AAAA,2BACI;AAAI,MAAA,SAAS,EAAC,sBAAd;AAAA,8BACI;AAAA,+BAAI;AAAG,UAAA,KAAK,EAAE;AAACG,YAAAA,KAAK,EAAE;AAAR,WAAV;AAA8B,sBAAS,kBAAvC;AAA0D,UAAA,SAAS,EAAC,aAApE;AAAkF,UAAA,OAAO,EAAE,MAAM;AAACC,YAAAA,KAAK,CAACC,IAAD,CAAL;AAAY;AAA9G;AAAA;AAAA;AAAA;AAAA;AAAJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,+BACI,QAAC,iBAAD;AACI,UAAA,MAAM,EAAE,kBADZ;AAEI,UAAA,OAAO,EAAE,MAAM,CAAE,CAFrB;AAGI,UAAA,WAAW,EAAE,SAHjB;AAII,UAAA,UAAU,EAAE,cAJhB;AAKI,UAAA,aAAa,EAAC;AALlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFJ,eAWI;AAAA,+BACI,QAAC,iBAAD;AACI,UAAA,MAAM,EAAE,kBADZ;AAEI,UAAA,OAAO,EAAE,MAAM,CAAE,CAFrB;AAGI,UAAA,WAAW,EAAE,SAHjB;AAII,UAAA,UAAU,EAAE,cAJhB;AAKI,UAAA,aAAa,EAAC;AALlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAwBH,CA5CD;;KAAMX,Y;AA8CN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\nimport './OptionsGroup.css'\nimport ReactToolTip from \"react-tooltip\";\nimport {AcceptRejectModal} from \"./AcceptRejectModal\";\nimport axios from \"axios\";\n\n/**\n * The OptionsGroup stateless functional component allows a user to modify a given component. For each table cell,\n * the object from the database entry is passed as a prop. Upon clicking an object, the ID is passed down further to a\n * confirmation modal, which will confirm that the user wishes to proceed with the operation OR it presents\n * with a popup to change the settings from the application.\n * @param props props.app stores the application as a prop, so as to prepare the options modal\n * @returns {JSX.Element}\n * @constructor\n */\nconst OptionsGroup = (props) => {\n\n    /**\n     * Handles action taken when the user marks an item as accepted.\n     */\n    const handleMarkAccepted = async () => {\n        const response = await axios.patch(`http://localhost:3000/api/applications/${props.app.id}`, {\n            status: 'ACCEPTED'\n        })\n    }\n\n    /**\n     * Handles action taken when the user marks an item as rejected.\n     */\n    const handleMarkRejected = async () => {\n        const response = await axios.patch(`http://localhost:3000/api/applications/${props.app.id}`, {\n\n        })\n    }\n\n    return(\n        <div className='options__group__container'>\n            <ul className='options__group__list'>\n                <li><i style={{color: '#51629D'}} data-tip=\"Edit application\" className='fas fa-cogs' onClick={() => {alert(test)}}></i></li>\n                <li>\n                    <AcceptRejectModal\n                        action={\"mark as rejected\"}\n                        handler={() => {}}\n                        buttonColor={'#E48C86'}\n                        buttonIcon={'fas fa-times'}\n                        buttonTooltip=\"Mark as rejected\"\n                    />\n                </li>\n                <li>\n                    <AcceptRejectModal\n                        action={\"mark as accepted\"}\n                        handler={() => {}}\n                        buttonColor={'#88E486'}\n                        buttonIcon={'fas fa-check'}\n                        buttonTooltip=\"Mark as accepted\"/>\n                </li>\n            </ul>\n        </div>\n    )\n}\n\nexport default OptionsGroup"]},"metadata":{},"sourceType":"module"}